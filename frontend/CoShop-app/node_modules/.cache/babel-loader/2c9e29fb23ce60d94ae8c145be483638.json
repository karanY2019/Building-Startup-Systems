{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\april\\\\OneDrive\\\\Desktop\\\\CT2021\\\\Building-Startup-Systems\\\\frontend\\\\CoShop-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Button, Alert, Breadcrumb, Card, Container, Form, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\nimport Navigation from './Component/Navigation';\nimport { Router } from 'react-router-dom';\nimport history from './Services/history';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyANXg6kpBF53hSn-2smRbxdXT-JXztdN6s\",\n  authDomain: \"coshop-cs5356.firebaseapp.com\",\n  projectId: \"coshop-cs5356\",\n  storageBucket: \"coshop-cs5356.appspot.com\",\n  messagingSenderId: \"852483800520\",\n  appId: \"1:852483800520:web:5aaed6423d886d21e814fd\",\n  measurementId: \"G-8DPCYD26VD\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nclass SignedInComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //chatrooms: [],\n      newChatroomName: null\n    };\n  }\n\n  async fetchChatrooms() {\n    var _firebase$auth$curren;\n\n    const token = await ((_firebase$auth$curren = firebase.auth().currentUser) === null || _firebase$auth$curren === void 0 ? void 0 : _firebase$auth$curren.getIdToken());\n\n    try {\n      const response = await fetch('http://localhost:4000/dev/feed', {\n        headers: {\n          'Authorization': token\n        }\n      });\n\n      if (response.status === 401) {\n        console.log('unauthorized');\n      } else {\n        const data = await response.json();\n        this.setState({\n          data\n        }); // this.setState({ chatrooms: results.Items })\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  componentDidMount() {\n    this.fetchChatrooms();\n  } // onNewChatroomNameUpdated(event) {\n  // \tthis.setState({newChatroomName: event.target.value})\n  // }\n  // async createNewChatroom() {\n  // \tconst token = await firebase.auth().currentUser?.getIdToken()\n  // \t// Make a POST request to your new API\n  // \tconst response = await fetch('http://localhost:4000/dev/feedUpload', {\n  // \t\tmethod: 'POST',\n  // \t\theaders: {\n  // \t\t\t'Authorization': token\n  // \t\t},\n  // \t\t// Include the data you want to save in the body of the request\n  // \t\t// as a JSON string\n  // \t\tbody: JSON.stringify({\n  // \t\t\tchatId: this.state.newChatroomName\n  // \t\t})\n  // \t})\n  // \t// After the request is made, get all the users chatrooms again\n  // \t// which will now include the newest one\n  // \tthis.fetchChatrooms()\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"My Feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.data && this.state.data.Items.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [item.chatId, \" from \", item.chatId]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 16\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Create a Chat Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: event => this.onNewChatroomNameUpdated(event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.createNewChatroom(),\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nclass Collabrators extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orders: null\n    };\n  }\n\n  async componentDidMount() {\n    var _firebase$auth$curren2;\n\n    const idToken = await ((_firebase$auth$curren2 = firebase.auth().currentUser) === null || _firebase$auth$curren2 === void 0 ? void 0 : _firebase$auth$curren2.getIdToken()); //this.setState({data: idToken})\n\n    const backend = 'https://0885t1ok71.execute-api.us-east-1.amazonaws.com/dev/collabrators';\n    const local = 'http://localhost:4000/dev/collabrators';\n    const response = await fetch(backend, {\n      headers: {\n        'Authorization': idToken\n      }\n    });\n\n    if (response.status === 401) {\n      return console.log('unauthorized');\n    }\n\n    const collabrators = await response.json(); // save it to your components state so you can use it during render\n\n    this.setState({\n      collabrators: collabrators\n    });\n    console.log(collabrators);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [console.log(\"PLEASE\", this.state.collabrators), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"My Collabrators \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.collabrators && this.state.collabrators.map((collabrators, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"title is-4\",\n                children: [\"collabrators Name: \", collabrators.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"subtitle is-6\",\n                children: [\"collabrators location: \", collabrators.loc]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nclass SignInScreen extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSignedIn: false // Local signed-in state.\n\n    };\n    this.uiConfig = {\n      // Popup signin flow rather than redirect flow.\n      signInFlow: 'popup',\n      // We will display Google and Facebook as auth providers.\n      signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID],\n      callbacks: {\n        // Avoid redirects after sign-in.\n        signInSuccessWithAuthResult: () => false\n      }\n    };\n  }\n\n  // Listen to the Firebase Auth state and set the local state.\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => this.setState({\n      isSignedIn: !!user\n    }));\n  } // Make sure we un-register Firebase observers when the component unmounts.\n\n\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"CoShop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please sign-in:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledFirebaseAuth, {\n          uiConfig: this.uiConfig,\n          firebaseAuth: firebase.auth()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"CoShop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"align-login-item-centre\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-3\",\n          style: {\n            color: \"#000\",\n            width: '30rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSK4aQGQczM3a39lujDohb4FjYXLKTexZU1MQ&usqp=CAU/160/50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: \"Collaborative Shopping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Breadcrumb, {\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n            children: \"About\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n            children: \"Stores\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n            active: true,\n            children: \"Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Welcome ! You are now signed-in!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(SignedInComponent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Collabrators, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            block: true,\n            onClick: () => firebase.auth().signOut(),\n            children: \"Sign-out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(SignInScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n/*function App() {\r\n  return (\r\n  <Router history={history}>\r\n  <Navigation />\r\n  </Router>\r\n  );\r\n  }*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/april/OneDrive/Desktop/CT2021/Building-Startup-Systems/frontend/CoShop-app/src/App.js"],"names":["React","Component","Button","Alert","Breadcrumb","Card","Container","Form","Row","Col","StyledFirebaseAuth","firebase","Navigation","Router","history","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","SignedInComponent","state","newChatroomName","fetchChatrooms","token","auth","currentUser","getIdToken","response","fetch","headers","status","console","log","data","json","setState","err","error","componentDidMount","render","Items","map","item","index","chatId","event","onNewChatroomNameUpdated","createNewChatroom","Collabrators","orders","idToken","backend","local","collabrators","name","loc","SignInScreen","isSignedIn","uiConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","unregisterAuthObserver","onAuthStateChanged","user","componentWillUnmount","color","width","signOut","App"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport {Button, Alert, Breadcrumb, Card, Container, Form, Row, Col} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport firebase from 'firebase';\r\n\r\nimport Navigation from './Component/Navigation';\r\nimport { Router } from 'react-router-dom';\r\nimport history from './Services/history';\r\n\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyANXg6kpBF53hSn-2smRbxdXT-JXztdN6s\",\r\n  authDomain: \"coshop-cs5356.firebaseapp.com\",\r\n  projectId: \"coshop-cs5356\",\r\n  storageBucket: \"coshop-cs5356.appspot.com\",\r\n  messagingSenderId: \"852483800520\",\r\n  appId: \"1:852483800520:web:5aaed6423d886d21e814fd\",\r\n  measurementId: \"G-8DPCYD26VD\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nclass SignedInComponent extends React.Component {\r\n  state = {\r\n\t\t//chatrooms: [],\r\n\t\tnewChatroomName: null\r\n\t}\r\n\r\n\tasync fetchChatrooms() {\r\n\t\tconst token = await firebase.auth().currentUser?.getIdToken()\r\n\t\ttry {\r\n     const response  = await fetch('http://localhost:4000/dev/feed', {\r\n\t\t\t headers: {\r\n\t\t\t \t'Authorization': token\r\n\t\t\t },\r\n\t\t});\r\n    if (response.status === 401) {\r\n       console.log('unauthorized')\r\n    } else {\r\n      const data = await response.json();\r\n      this.setState({ data })\r\n      // this.setState({ chatrooms: results.Items })\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n\t\t\r\n\t} \r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.fetchChatrooms();\r\n\t}\r\n\r\n\t// onNewChatroomNameUpdated(event) {\r\n\t// \tthis.setState({newChatroomName: event.target.value})\r\n\t// }\r\n\r\n\t// async createNewChatroom() {\r\n\t// \tconst token = await firebase.auth().currentUser?.getIdToken()\r\n\r\n\t// \t// Make a POST request to your new API\r\n\t// \tconst response = await fetch('http://localhost:4000/dev/feedUpload', {\r\n\t// \t\tmethod: 'POST',\r\n\t// \t\theaders: {\r\n\t// \t\t\t'Authorization': token\r\n\t// \t\t},\r\n\r\n\t// \t\t// Include the data you want to save in the body of the request\r\n\t// \t\t// as a JSON string\r\n\t// \t\tbody: JSON.stringify({\r\n\t// \t\t\tchatId: this.state.newChatroomName\r\n\t// \t\t})\r\n\t// \t})\r\n\r\n\t// \t// After the request is made, get all the users chatrooms again\r\n\t// \t// which will now include the newest one\r\n\t// \tthis.fetchChatrooms()\r\n\t// }\r\n\r\n\trender() {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"title\">My Feed</div>\r\n\t\t\t\t\t<ul>\r\n\t\r\n             {/* {this.state.chatrooms && this.state.chatrooms.map(chatroom => { */}\r\n\t\t\t\t\t\t\t{/* return <li>Chat ID: {chatroom.chatId}</li> */}\r\n            {this.state.data && this.state.data.Items.map((item,index) => {\r\n\t\t\t\t\t\t \treturn (\r\n               <li key={index}>\r\n                 \r\n                 {item.chatId} from {item.chatId}\r\n               </li>  \r\n              )\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"title\">Create a Chat Room</div>\r\n\r\n\t\t\t\t\t\t{/* Use an input field with an onChange handler */}\r\n\t\t\t\t\t\t<input type=\"text\" onChange={(event) => this.onNewChatroomNameUpdated(event)}></input>\r\n\r\n\t\t\t\t\t\t{/* Use a button with an onClick handler to create */}\r\n\t\t\t\t\t\t<button onClick={() => this.createNewChatroom()}>Create</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\n\r\n\r\nclass Collabrators extends React.Component {\r\n  state = {\r\n    orders: null\r\n  }\r\n  \r\n  async componentDidMount() {\r\n    \r\n    const idToken = await firebase.auth().currentUser?.getIdToken()  \r\n    //this.setState({data: idToken})\r\n    const backend='https://0885t1ok71.execute-api.us-east-1.amazonaws.com/dev/collabrators'\r\n    const local= 'http://localhost:4000/dev/collabrators'\r\n\r\n    const response = await fetch(backend, {\r\n      headers: {\r\n        'Authorization': idToken\r\n      }\r\n    })\r\n    if (response.status === 401) {\r\n      return console.log('unauthorized')\r\n    }\r\n    const collabrators = await response.json()\r\n    // save it to your components state so you can use it during render\r\n    this.setState({collabrators: collabrators})\r\n    console.log(collabrators)\r\n  }\r\n  \r\n  render() {\r\n    return ( \r\n    <div>\r\n    {console.log(\"PLEASE\", this.state.collabrators)}\r\n    <div className=\"title\">My Collabrators </div>  \r\n      <ul>      \r\n      {        \r\n        this.state.collabrators && this.state.collabrators.map((collabrators,index) =>  {\r\n          return (\r\n            <li key={index}>\r\n              <div>\r\n                <p class = \"title is-4\">collabrators Name: {collabrators.name}</p>\r\n                <p class = \"subtitle is-6\">collabrators location: {collabrators.loc}</p>\r\n              </div>\r\n            </li>\r\n          )\r\n        })       \r\n      }      \r\n    </ul>\r\n  </div>\r\n    )  \r\n  }  \r\n}\r\n \r\nclass SignInScreen extends React.Component {\r\n \r\n  // The component's Local state.\r\n  state = {\r\n    isSignedIn: false // Local signed-in state.\r\n  };\r\n  \r\n  // Configure FirebaseUI.\r\n  uiConfig = {\r\n    // Popup signin flow rather than redirect flow.\r\n    signInFlow: 'popup',\r\n    // We will display Google and Facebook as auth providers.\r\n    signInOptions: [\r\n      firebase.auth.EmailAuthProvider.PROVIDER_ID\r\n    ],\r\n    callbacks: {\r\n      // Avoid redirects after sign-in.\r\n      signInSuccessWithAuthResult: () => false\r\n    }\r\n  };\r\n\r\n  // Listen to the Firebase Auth state and set the local state.\r\n  componentDidMount() {\r\n    \r\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\r\n       (user) => this.setState({isSignedIn: !!user})\r\n    );\r\n   \r\n  }\r\n\r\n  // Make sure we un-register Firebase observers when the component unmounts.\r\n  componentWillUnmount() {\r\n    this.unregisterAuthObserver();\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.isSignedIn) {\r\n      return (\r\n        <div>\r\n          <h1>CoShop</h1>\r\n          <p>Please sign-in:</p>\r\n          <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()}/>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>CoShop</h1>\r\n        <div class=\"align-login-item-centre\">\r\n        <Card className=\"mb-3\" style={{color: \"#000\", width: '30rem'}}>\r\n          <Card.Img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSK4aQGQczM3a39lujDohb4FjYXLKTexZU1MQ&usqp=CAU/160/50\"/>\r\n          <Card.Body>\r\n            {/* <Card.Title> \r\n              CoShop\r\n            </Card.Title>*/}\r\n            <Card.Text>\r\n            Collaborative Shopping\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        <Breadcrumb>\r\n          <Breadcrumb.Item>About</Breadcrumb.Item>\r\n          <Breadcrumb.Item>Stores</Breadcrumb.Item>\r\n          <Breadcrumb.Item>Location</Breadcrumb.Item>\r\n          <Breadcrumb.Item active>Test</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <Container>\r\n        <p>Welcome ! You are now signed-in!</p>\r\n\r\n        {/* <p>Welcome {firebase.auth().currentUser.displayName}! You are now signed-in!</p> */}\r\n        {/* <p> E-mail: {firebase.auth().currentUser.email}   </p> */}\r\n\r\n        {/* <a onClick={() => firebase.auth().signOut()}>Sign-out</a> */}\r\n        {/* Fetch data from API */}\r\n      \r\n        {/* <button className=\"fetch-button\" onClick={Collabrators }>Fetch Data</button> */}\r\n        \r\n        <SignedInComponent /> \r\n        <Collabrators /> \r\n        <Button variant=\"primary\" block onClick={() => firebase.auth().signOut()}>Sign-out</Button> \r\n        </Container>\r\n     </div>\r\n  \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\r\n        <SignInScreen />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n/*function App() {\r\n  return (\r\n  <Router history={history}>\r\n  <Navigation />\r\n  </Router>\r\n  );\r\n  }*/\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}